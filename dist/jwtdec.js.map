{"version":3,"file":"jwtdec.js","mappings":"2hBAKA,IAEA,2B,+CACC,OADmC,OACnC,EADD,CAAoCA,OAiCpC,UA3BA,SAAkBC,GAChB,IAAIC,EAAMC,OAAOF,GAAOG,QAAQ,MAAO,IACvC,GAAIF,EAAIG,OAAS,GAAK,EACpB,MAAM,IAAIC,EAAsB,qEAGlC,IADA,IAAIC,EAAiB,GAGjBC,EAAK,EAAGC,EAAK,EAAGC,OAAM,EAAEC,EAAM,EAElCD,EAASR,EAAIU,OAAOD,MAEnBD,IAAWD,EAAKD,EAAK,EAAS,GAALC,EAAUC,EAASA,EAG7CF,IAAO,GAAKD,GAAUJ,OAAOU,aAAa,IAAMJ,KAAQ,EAAID,EAAK,IAAM,EAGrEE,EA1BU,oEA0BKI,QAAQJ,GAEzB,OAAOH,I,8BCjCT,aAmCA,UAvBA,SAA2BL,GAEzB,IAAIK,EAASL,EAAIE,QAAQ,KAAM,KAAKA,QAAQ,KAAM,KAClD,OAAQG,EAAOF,OAAS,GACtB,KAAK,EACH,MACF,KAAK,EACHE,GAAU,KACV,MACF,KAAK,EACHA,GAAU,IACV,MACF,QACE,KAAM,4BAGV,IACE,OA3BJ,SAA0BL,GACxB,OAAOa,oBAAmB,aAAKb,GAAKE,QAAQ,QAAQ,SAAUY,EAAGC,GAC/D,IAAIC,EAAOD,EAAEE,WAAW,GAAGC,SAAS,IAAIC,cAIxC,OAHIH,EAAKb,OAAS,IAChBa,EAAO,IAAMA,GAER,IAAMA,MAqBNI,CAAiBf,GACxB,MAAOgB,GACP,OAAO,aAAKhB,M,8hBC/BhB,aAEA,2B,+CAAuC,OAAP,OAAO,EAAvC,CAAgCP,OAIvB,EAAAwB,kBAAAA,EAkBT,UAhBA,SAAqBC,EAAYC,GAE/B,GAAqB,iBAAVD,EAET,MAAM,IAAID,EAAkB,2BAI9B,IAAIG,GAAyB,KAD7BD,EAAUA,GAAW,IACHE,OAAkB,EAAI,EACxC,IACE,OAAOC,KAAKC,OAAM,aAAkBL,EAAMM,MAAM,KAAKJ,KACrD,MAAOK,GACP,MAAM,IAAIR,EAAkB,4BAA8BQ,EAAEC,aCnB5DC,EAA2B,IAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,IAOV,OAHAE,EAAoBL,GAAUM,KAAKF,EAAOD,QAASC,EAAQA,EAAOD,QAASJ,GAGpEK,EAAOD,SClBWJ,CAAoB,M","sources":["webpack://intoy-jwtdec/./src/atob.ts","webpack://intoy-jwtdec/./src/base64_url_decode.ts","webpack://intoy-jwtdec/./src/index.ts","webpack://intoy-jwtdec/webpack/bootstrap","webpack://intoy-jwtdec/webpack/startup"],"sourcesContent":["/**\r\n * The code was extracted from:\r\n * https://github.com/davidchambers/Base64.js\r\n */\n\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nclass InvalidCharacterError extends Error\n{}\n\n\n\n\nfunction polyfill(input: any) {\n  let str = String(input).replace(/=+$/, '');\n  if (str.length % 4 == 1) {\n    throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n  }\n  let output: string = '';\n  for (\n  // initialize result and counters\n  let bc = 0, bs = 0, buffer, idx = 0;\n  // get next character\n  buffer = str.charAt(idx++);\n  // character found in table? initialize bit storage and add its ascii value;\n  ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n  // and if not first of each 4 characters,\n  // convert the first 8 bits to one ascii character\n  bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0)\n  {\n    // try to find character in table (0-63, not found => -1)\n    buffer = chars.indexOf(buffer);\n  }\n  return output;\n}\n\n\n//module.exports = typeof window !== 'undefined' && window.atob && window.atob.bind(window) || polyfill;\n//module.exports=polyfill;\n\nexport default polyfill;","import atob from \"./atob\";\n\nfunction b64DecodeUnicode(str: any) {\n  return decodeURIComponent(atob(str).replace(/(.)/g, function (m, p) {\n    let code = p.charCodeAt(0).toString(16).toUpperCase();\n    if (code.length < 2) {\n      code = '0' + code;\n    }\n    return '%' + code;\n  }));\n}\n\nfunction base64_url_decode(str: any)\n{\n  var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  switch (output.length % 4) {\n    case 0:\n      break;\n    case 2:\n      output += \"==\";\n      break;\n    case 3:\n      output += \"=\";\n      break;\n    default:\n      throw \"Illegal base64url string!\";}\n\n\n  try {\n    return b64DecodeUnicode(output);\n  } catch (err) {\n    return atob(output);\n  }\n}\n\nexport default base64_url_decode;","import base64_url_decode from \"./base64_url_decode\";\n\nclass InvalidTokenError extends Error {}\n\n\n\nexport { InvalidTokenError };\n\nfunction decodeToken(token: any, options?: any)\n{\n  if (typeof token !== 'string')\n  {\n    throw new InvalidTokenError('Invalid token specified');\n  }\n\n  options = options || {};\n  var pos = options.header === true ? 0 : 1;\n  try {\n    return JSON.parse(base64_url_decode(token.split('.')[pos]));\n  } catch (e) {\n    throw new InvalidTokenError('Invalid token specified: ' + e.message);\n  }\n}\n\nexport default decodeToken;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(608);\n"],"names":["Error","input","str","String","replace","length","InvalidCharacterError","output","bc","bs","buffer","idx","charAt","fromCharCode","indexOf","decodeURIComponent","m","p","code","charCodeAt","toString","toUpperCase","b64DecodeUnicode","err","InvalidTokenError","token","options","pos","header","JSON","parse","split","e","message","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call"],"sourceRoot":""}